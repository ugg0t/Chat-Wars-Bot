# coding=utf-8
from pytg.sender import Sender
from pytg.receiver import Receiver
from pytg.utils import coroutine
from collections import deque
from time import time, sleep
from getopt import getopt
import sys
import datetime
import re
import _thread
import random

# username –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞
bot_username = 'ChatWarsBot'
# –≤–∞—à username –∏–ª–∏ username —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
admin_username = 'AlexanderSvetly'
# username –±–æ—Ç–∞ –∏/–∏–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–∫–∞–∑—ã
order_usernames = 'RedStatBot'
# –∏–º—è –∑–∞–º–∫–∞
castle_name = 'red'

# –ø—É—Ç—å –∫ —Å–æ–∫–µ—Ç —Ñ–∞–π–ª—É
socket_path = ''
# —Ö–æ—Å—Ç —á—Ç–æ–± —Å–ª—É—à–∞—Ç—å telegram-cli
host = 'localhost'
# –ø–æ—Ä—Ç –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å—à—É–ª–∞—Ç—å
port = 1338

opts, args = getopt(sys.argv[1:], 'a:o:c:s:h:p', ['admin=', 'order=', 'castle=', 'socket=', 'host=', 'port='])

for opt, arg in opts:
    if opt in ('-a', '--admin'):
        admin_username = arg
    elif opt in ('-o', '--order'):
        order_usernames = arg.split(',')
    elif opt in ('-c', '--castle'):
        castle_name = arg
    elif opt in ('-s', '--socket'):
        socket_path = arg
    elif opt in ('-h', '--host'):
        host = arg
    elif opt in ('-p', '--port'):
        port = int(arg)

orders = {
    'red':    'üáÆüá≤',
    'black':  'üá¨üáµ',
    'white':  'üá®üáæ',
    'yellow': 'üáªüá¶',
    'blue':   'üá™üá∫',

    'forest_fort':   'üå≤–õ–µ—Å–Ω–æ–π —Ñ–æ—Ä—Ç',
    'mountain_fort': '‚õ∞–ì–æ—Ä–Ω—ã–π —Ñ–æ—Ä—Ç',

    'forest':  'üå≤–õ–µ—Å',
    'cave':    'üï∏–ü–µ—â–µ—Ä–∞',
    'korovan': 'üê´–ì—Ä–∞–±–∏—Ç—å –ö–æ—Ä–æ–≤–∞–Ω—ã',

    'def_korovan': '/go',
    'defence': 'üõ° –ó–∞—â–∏—Ç–∞',
    'attack':  '‚öî –ê—Ç–∞–∫–∞',
    'hero': 'üèÖ–ì–µ—Ä–æ–π',
    'searching_opponent': 'üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞'
}

symbols = {
    'mountain': '‚õ∞',
    'forest':   'üå≤',
    'defence':  'üõ°',
    'attack':   '‚öî'
}

arena_defence  = ['üõ°–≥–æ–ª–æ–≤—ã', 'üõ°–∫–æ—Ä–ø—É—Å–∞', 'üõ°–Ω–æ–≥']
arena_attack = ['üó°–≤ –≥–æ–ª–æ–≤—É', 'üó°–ø–æ –∫–æ—Ä–ø—É—Å—É', 'üó°–ø–æ –Ω–æ–≥–∞–º']

# castle = orders[castle_name]
# —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—Ç–∞, —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
current_order = {'time': 0, 'order': castle_name}

sender = Sender(sock=socket_path) if socket_path else Sender(host=host, port=port)
action_list = deque([])
log_list = deque([], maxlen=30)
last_arena_visit = 0
get_info_diff = 360
hero_message_id = ''

bot_enabled = True
arena_enabled = True
forest_enabled = True
korovan_def_enabled = True
order_enabled = True
auto_def_enabled = True


@coroutine
def work_with_message(receiver):
    while True:
        msg = (yield)
        try:
            if msg['event'] == 'message' and 'text' in msg and msg['peer'] is not None:
                parse_text(msg['text'], msg['sender']['username'], msg['id'])
        except Exception as err:
            log('–û—à–∏–±–∫–∞ coroutine: {0}'.format(err))


def queue_worker():
    global get_info_diff
    lt_info = 0
    while True:
        try:
            #if time() - last_command_time > time_between_commands:
            #last_command_time = time()
            if time() - lt_info > get_info_diff:
                lt_info = time()
                get_info_diff = random.randint(600, 1200)
                send_msg(bot_username, orders['hero'])
                continue

            if len(action_list):
                log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ' + action_list[0])
                send_msg(bot_username, action_list.popleft())
            sleep_time = random.randint(2, 8)
            sleep(sleep_time)
        except Exception as err:
            log('–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏: {0}'.format(err))


def parse_text(text, username, message_id):
    global last_arena_visit
    global hero_message_id
    global bot_enabled
    global order_enabled

    global forest_enabled
    global cave_enabled
    global korovan_enabled
    
    global auto_level_up
    global korovan_def_enabled
    global arena_enabled
    global auto_def_enabled

    if !bot_enabled:
        return

    if username == bot_username:
        log('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è')

        # TO DO: level up
        if auto_level_up and text.find('/level_up'):
            action_list.append('+1 ‚öî–ê—Ç–∞–∫–∞')

        # –∑–∞—â–∏—Ç–∞ –∫–æ—Ä–æ–≤–∞–Ω–∞
        if korovan_def_enabled and text.find(' /go') != -1:
            action_list.append(orders['def_korovan'])

        if (orders['def_korovan'] in action_list) and (time() - current_order['time'] < 3600):
            update_order(current_order['order'])
        elif text.find('–ë–∏—Ç–≤–∞ –ø—è—Ç–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑') != -1:
            hero_message_id = message_id
            m = re.search('–ë–∏—Ç–≤–∞ –ø—è—Ç–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑(?: ([0-9]+)—á){0,1}(?: ([0-9]+)){0,1}', text)
            if not m.group(1):
                if m.group(2) and int(m.group(2)) <= 59:
                    # send_msg(admin_username, '–î–æ –±–∏—Ç–≤—ã ' + m.group(2) + ' –º–∏–Ω—É—Ç(—ã)!')
                    # –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
                    state = re.search('–°–æ—Å—Ç–æ—è–Ω–∏–µ:\\n(.*)$', text)
                    if auto_def_enabled and time() - current_order['time'] > 3600:
                        update_order(castle_name)
                    return
            log('–í—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
            # —Ç–µ–ø–µ—Ä—å —É–∑–Ω–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —É –Ω–∞—Å –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –∏ –∑–æ–ª–æ—Ç–∞
            # m = re.search('–ó–æ–ª–æ—Ç–æ: (-*[0-9]+)\\n.*–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+) –∏–∑', text)
            gold = int(re.search('üí∞([0-9]+)', text).group(1))
            stamina = int(re.search('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+)', text).group(1))
            log('–ó–æ–ª–æ—Ç–æ: {0}, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {1}'.format(gold, stamina))
            if forest_enabled and stamina > 0 and orders['forest'] not in action_list:
                action_list.append(orders['forest'])
            elif cave_enabled and stamina > 1 and orders['cave'] not in action_list:
                action_list.append(orders['cave'])
            elif korovan_enabled and stamina > 1 and orders['korovan'] not in action_list:
                action_list.append(orders['korovan'])
            elif (arena_enabled and gold >= 5) and (orders['searching_opponent'] not in action_list) and (time() - last_arena_visit > 3600):
                action_list.append(orders['searching_opponent'])

        elif arena_enabled and text.find('–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã') != -1:
            last_arena_visit = time()
            attack_chosen = arena_attack[random.randint(0, 2)]
            defence_chosen  = arena_defence[random.randint(0, 2)]
            log('–ê—Ç–∞–∫–∞: {0}, –ó–∞—â–∏—Ç–∞: {1}'.format(attack_chosen, defence_chosen))
            action_list.append(attack_chosen)
            action_list.append(defence_chosen)

    else:
        if order_enabled and username in order_usernames:
            if text.find(orders['red']) != -1:
                update_order(orders['red'])
            elif text.find(orders['black']) != -1:
                update_order(orders['black'])
            elif text.find(orders['white']) != -1:
                update_order(orders['white'])
            elif text.find(orders['yellow']) != -1:
                update_order(orders['yellow'])
            elif text.find(orders['blue']) != -1:
                update_order(orders['blue'])

            elif text.find(symbols['forest']) != -1:
                update_order(orders['forest_fort'])
            elif text.find(symbols['mountain']) != -1:
                update_order(orders['mountain_fort'])
            elif text.find(symbols['defence']) != -1:
                update_order(castle_name)

            # send_msg(admin_username, '–ü–æ–ª—É—á–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É ' + current_order['order'] + ' –æ—Ç ' + username)

        if username == admin_username:
            if text == '#help':
                send_msg(admin_username, '\n'.join([
                    '#enable_bot - –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#disable_bot - –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#enable_arena - –í–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#disable_arena - –í—ã–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#enable_forest - –í–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#disable_forest - –í—ã–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#enable_cave - –í–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—É',
                    '#disable_cave - –í—ã–∫–ª—é—á–∏—Ç—å –ø–µ—â–µ—Ä—É',
                    '#enable_korovan - –í–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#disable_korovan - –í—ã–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#enable_def_korovan - –í–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –∫–æ—Ä–æ–≤–∞–Ω–∞',
                    '#disable_def_korovan - –í—ã–∫–ª—é—á–∏—Ç—å –∑–∞—â–∏—Ç—É –∫–æ—Ä–æ–≤–∞–Ω–∞',
                    '#enable_order - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#disable_order - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#enable_auto_def - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#disable_auto_def - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#enable_auto_level_up - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ level up',
                    '#disable_auto_level_up - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ level up',
                    '#status - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å',
                    '#hero - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ—Ä–æ–µ',
                    '#push_order - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∫–∞–∑ ({0})'.format(','.join(orders)),
                    '#order - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞—â–∏—Ç—ã/–∞—Ç–∞–∫–∏ –∑–∞–º–∫–∞',
                    '#log - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ª–æ–≥–∞',
                    '#time - –î–µ–±–∞–≥, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
                    '#last_arena_visit - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –±–∏—Ç–≤–∞ –Ω–∞ –∞—Ä–µ–Ω–µ',
                    '#get_info_diff - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–µ—Ä–æ–µ',
                    '#ping - –î–µ–±–∞–≥, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∂–∏–≤ –ª–∏ –±–æ—Ç',
                ]))

            # –í–∫–ª/–≤—ã–∫–ª –±–æ—Ç–∞
            if text == '#enable_bot':
                bot_enabled = True
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_bot':
                bot_enabled = False
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞—Ä–µ–Ω—ã
            if text == '#enable_arena':
                arena_enabled = True
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            if text == '#disable_arena':
                arena_enabled = False
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –ª–µ—Å–∞
            if text == '#enable_forest':
                forest_enabled = True
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_forest':
                forest_enabled = False
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –ø–µ—â–µ—Ä—ã
            if text == '#enable_cave':
                cave_enabled = True
                send_msg(admin_username, '–ü–µ—â–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            if text == '#disable_cave':
                cave_enabled = False
                send_msg(admin_username, '–ü–µ—â–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ—Ä–æ–≤–∞–Ω–∞
            if text == '#enable_korovan':
                korovan_enabled = True
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            if text == '#disable_korovan':
                korovan_enabled = False
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ—Ä–æ–≤–∞–Ω–∞
            if text == '#enable_def_korovan':
                korovan_def_enabled = True
                send_msg(admin_username, '–ó–∞—â–∏—Ç–∞ –∫–æ—Ä–æ–≤–∞–Ω–æ–≤ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            if text == '#disable_def_korovan':
                korovan_def_enabled = False
                send_msg(admin_username, '–ó–∞—â–∏—Ç–∞ –∫–æ—Ä–æ–≤–∞–Ω–æ–≤ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ–º–∞–Ω–¥
            if text == '#enable_order':
                order_enabled = True
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            if text == '#disable_order':
                order_enabled = False
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–µ—Ñ
            if text == '#enable_auto_def':
                auto_def_enabled = True
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_auto_def':
                auto_def_enabled = False
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–µ—Ñ
            if text == '#enable_auto_level_up':
                auto_level_up = True
                send_msg(admin_username, '–ê–≤—Ç–æ levelup —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_auto_level_up':
                auto_level_up = False
                send_msg(admin_username, '–ê–≤—Ç–æ levelup —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            if text == '#status':
                send_msg(admin_username, '\n'.join([
                    '–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω: {0}',
                    '–ê—Ä–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞: {1}',
                    '–õ–µ—Å –≤–∫–ª—é—á–µ–Ω: {2}',
                    '–ü–µ—â–µ—Ä—ã –≤–∫–ª—é—á–µ–Ω—ã: {3}',
                    '–ö–æ—Ä–æ–≤–∞–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã: {4}',
                    '–ó–∞—â–∏—Ç–∞ –∫–æ—Ä–æ–≤–∞–Ω–æ–≤ –≤–∫–ª—é—á–µ–Ω–∞: {5}',
                    '–ü—Ä–∏–∫–∞–∑—ã –≤–∫–ª—é—á–µ–Ω—ã: {6}',
                    '–ê–≤—Ç–æ –¥–µ—Ñ –≤–∫–ª—é—á–µ–Ω: {7}',
                    '–ê–≤—Ç–æ levelup –≤–∫–ª—é—á–µ–Ω: {8}'
                ]).format(bot_enabled, arena_enabled, forest_enabled, cave_enabled, korovan_enabled, def_korovan_enabled, order_enabled, auto_def_enabled, auto_level_up))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ
            if text == '#hero':
                fwd(admin_username, hero_message_id)

            # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥
            if text == '#log':
                send_msg(admin_username, '\n'.join(log_list))
                log_list.clear()

            if text == '#last_arena_visit':
                send_msg(admin_username, str(last_arena_visit))

            if text == '#order':
                text_date = datetime.datetime.fromtimestamp(current_order['time']).strftime('%Y-%m-%d %H:%M:%S')
                send_msg(admin_username, current_order['order'] + ' ' + text_date)

            if text == '#time':
                text_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                send_msg(admin_username, text_date)

            if text == '#ping':
                send_msg(admin_username, '#pong')

            if text == '#get_info_diff':
                send_msg(admin_username, str(get_info_diff))

            if text.startswith('#push_order'):
                command = text.split(' ')[1]
                if command in orders:
                    update_order(orders[command])
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')


def _defsend_msg(to, message):
    sender.send_msg('@' + to, message)


def fwd(to, message_id):
    sender.fwd('@' + to, message_id)


def update_order(order):
    current_order['order'] = order
    current_order['time'] = time()
    if order == castle_name:
        action_list.append(orders['defence'])
    else:
        action_list.append(orders['attack'])
    action_list.append(order)


def log(text):
    message = '{0:%Y-%m-%d %H:%M:%S}'.format(datetime.datetime.now()) + ' ' + text
    print(message)
    log_list.append(message)


if __name__ == '__main__':
    receiver = Receiver(sock=socket_path) if socket_path else Receiver(port=port)
    receiver.start()  # start the Connector.
    _thread.start_new_thread(queue_worker, ())
    receiver.message(work_with_message(receiver))
    receiver.stop()